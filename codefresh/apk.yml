version: '1.0'
stages:
  - Prepare
  - Build
  - Publish
steps:

  main_clone:
    title: "Clone respository"
    type: git-clone
    stage: Prepare
    description: "Initialize"
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    git: github
    revision: ${{CF_REVISION}}

  stage:
    title: Pull down all existing packages from S3 bucket
    stage: Prepare
    image: cloudposse/build-harness:${{BUILD_HARNESS_VERSION}}
    working_directory: ./
    environment:
      - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts
    commands:
      - apk add openssl
      - make -C codefresh export mtime
      - aws s3 sync --exclude '*' --include '*.apk' --exact-timestamps "s3://${S3_BUCKET_NAME}/" "${APK_PACKAGES_PATH}/"
      - cp contrib/install.sh "${APK_PACKAGES_PATH}"
      - make -C vendor deindex
      - chown -R nobody "${APK_PACKAGES_PATH}"

  docker_build:
    type: "parallel"
    title: "Build Docker Images"
    description: "Build Docker images for all recent alpine releases"
    stage: Prepare
    steps:
      docker_build_3_7:
        title: Building Docker Image for alpine 3.7
        stage: Prepare
        type: build
        image_name: cloudposse/apkbuild-3.7
        working_directory: ./
        tag: '3.7'
        dockerfile: "apk/Dockerfile-3.7"

      docker_build_3_8:
        title: Building Docker Image for alpine 3.8
        stage: Prepare
        type: build
        image_name: cloudposse/apkbuild-3.8
        working_directory: ./
        tag: '3.8'
        dockerfile: "apk/Dockerfile-3.8"

      docker_build_3_9:
        title: Building Docker Image for alpine 3.9
        stage: Prepare
        type: build
        image_name: cloudposse/apkbuild-3.9
        working_directory: ./
        tag: '3.9'
        dockerfile: "apk/Dockerfile-3.9"

      docker_build_3_10:
        title: Building Docker Image for alpine 3.10
        stage: Prepare
        type: build
        image_name: cloudposse/apkbuild-3.10
        working_directory: ./
        tag: '3.10'
        dockerfile: "apk/Dockerfile-3.10"

      docker_build_3_11:
        title: Building Docker Image for alpine 3.11
        stage: Prepare
        type: build
        image_name: cloudposse/apkbuild-3.11
        working_directory: ./
        tag: '3.11'
        dockerfile: "apk/Dockerfile-3.11"



  apk_build:
    type: "parallel"
    title: "Build Alpine Packages"
    description: "Build alpine packages for each release"
    stage: Build
    steps:
      apk_build_3_7:
        title: Build alpine 3.7 packages
        stage: Build
        image: ${{docker_build_3_7}}
        working_directory: .
        environment:
          - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts/3.7
        commands:
          - make -C vendor build
          - make -C vendor index
          - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;

      apk_build_3_8:
        title: Build alpine 3.8 packages
        stage: Build
        image: ${{docker_build_3_8}}
        working_directory: .
        environment:
          - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts/3.8
        commands:
          - make -C vendor build
          - make -C vendor index
          - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;

      apk_build_3_9:
        title: Build alpine 3.9 packages
        stage: Build
        image: ${{docker_build_3_9}}
        working_directory: .
        environment:
          - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts/3.9
        commands:
          - make -C vendor build
          - make -C vendor index
          - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;

      apk_build_3_10:
        title: Build alpine 3.10 packages
        stage: Build
        image: ${{docker_build_3_10}}
        working_directory: .
        environment:
          - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts/3.10
        commands:
          - make -C vendor build
          - make -C vendor index
          - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;

      apk_build_3_11:
        title: Build alpine 3.11 packages
        stage: Build
        image: ${{docker_build_3_11}}
        working_directory: .
        environment:
          - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts/3.11
        commands:
          - make -C vendor build
          - make -C vendor index
          - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;
  
  # Only deploy on merge to master
  publish:
    title: Push all apk artifacts to S3 bucket
    stage: Publish
    image: cloudposse/build-harness:${{BUILD_HARNESS_VERSION}}
    working_directory: ./
    environment:
      - APK_PACKAGES_PATH=${{CF_VOLUME_PATH}}/artifacts
    commands:
      - find "${APK_PACKAGES_PATH}" -type f -name '*.apk' -exec ls -l {} \;
      - aws s3 sync --acl public-read --exact-timestamps "${APK_PACKAGES_PATH}/" "s3://${S3_BUCKET_NAME}/"
    when:
      condition:
        all:
          executeForTag: "'${{CF_BRANCH}}' == 'master'"
