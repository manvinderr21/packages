# Build a service with environment variables
version: '1.0'

stages:
  - Prepare
  - Build
  - Publish

steps:
  init_variables:
    title: Init variables
    stage: Prepare
    image: alpine
    commands:
      - cf_export BUILD_HARNESS_VERSION=0.6.4
      - cf_export GIT_BRANCH=${{CF_BRANCH}}

  main_clone:
    title: "Clone respository"
    stage: Prepare
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    git: github
    revision: '${{CF_REVISION}}'

  build_image:
    title: Build image
    stage: Build
    type: build
    description: Build packages
    image_name: packages
    dockerfile: Dockerfile

  semver:
    title: Export semantic version
    stage: Build
    image: cloudposse/build-harness:${{BUILD_HARNESS_VERSION}}
    working_directory: ${{build_image}}
    commands:
      - make git/export
      - make semver/export | tee -a ${{CF_VOLUME_PATH}}/env_vars_to_export

  push_image_commit:
    title: Push image with commit based semver tags
    stage: Publish
    type: push
    candidate: ${{build_image}}
    tags:
      - "${{SEMVERSION_COMMIT_SHORT}}"

  push_image_branch:
    title: Push image with branch based semver tags
    stage: Publish
    type: push
    candidate: ${{build_image}}
    tags:
      - "${{SEMVERSION_BRANCH_COMMIT_SHORT}}"
    when:
      condition:
        all:
          executeForBranch: "'${{SEMVERSION_BRANCH}}' != ''"

  push_image_tag_to_cfcr:
    title: Push image with tag based semver tags
    stage: Publish
    type: push
    registry: cfcr
    candidate: ${{build_image}}
    tag: "${{SEMVERSION_TAG}}"
    when:
      condition:
        all:
          executeForTag: "'${{SEMVERSION_TAG}}' != ''"

  push_image_tag_to_dockerhub:
    title: Push image with tag based semver tags
    stage: Publish
    type: push
    registry: dockerhub
    image_name: cloudposse/packages
    candidate: ${{build_image}}
    tag: "${{SEMVERSION_TAG}}"
    when:
      condition:
        all:
          executeForTag: "'${{SEMVERSION_TAG}}' != ''"

  push_image_latest_to_cfcf:
    title: Push image with latest tag
    stage: Publish
    type: push
    registry: cfcr
    candidate: ${{build_image}}
    tag: latest
    when:
      condition:
        all:
          executeForMasterBranch: "'${{CF_BRANCH}}' == 'master'"

  push_image_latest_to_dockerhub:
    title: Push image with latest tag
    stage: Publish
    type: push
    registry: dockerhub
    image_name: cloudposse/packages
    candidate: ${{build_image}}
    tag: latest
    when:
      condition:
        all:
          executeForMasterBranch: "'${{CF_BRANCH}}' == 'master'"
